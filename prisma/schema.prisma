generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  gradingTasks GradingTask[]

  @@map("users")
}

model GradingTask {
  id          String    @id @default(uuid())
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])  
  courseId    String?
  status      String    @default("created")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  completedAt DateTime?
  score       Int?
  feedback    Json?
  metadata    Json?

  @@index([authorId])
  @@index([status])
  @@map("grading_tasks")
}

model Rubric {
  id          String          @id @default(uuid())
  name        String
  description String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  criteria    RubricCriteria[]

  @@map("rubrics")
}

model RubricCriteria {
  id          String @id @default(uuid())
  name        String
  description String
  levels      Json // 存储评分等级 [{score: number, description: string}]
  rubricId    String
  rubric      Rubric @relation(fields: [rubricId], references: [id], onDelete: Cascade)

  @@map("rubric_criteria")
}

