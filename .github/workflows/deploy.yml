name: Docker CI/CD
on:
  push:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production  
    steps:
    - name: Start Deployment
      run: |
        echo "🚀 Starting deployment process"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${GITHUB_SHA::7}" 

    - uses: actions/checkout@v4
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: chunchiehdev/gradsystem:latest

    - name: Log Build Status
      run: |
        echo "✅ Docker image built and pushed"
        echo "Image tag: chunchiehdev/gradsystem:latest"

    - name: Deploy to K3s
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set +x  

          echo "Checking Redis status..."

          if ! kubectl get pod -l app=redis | grep -q Running; then
            echo "Redis is not running. Starting Redis..."
            kubectl apply -f $HOME/gradsystem/redis.yaml
            # 等待 Redis 就緒
            kubectl wait --for=condition=ready pod -l app=redis --timeout=60s
          fi


          echo "Starting application deployment..."
          kubectl rollout restart deployment gradsystem > /dev/null  
          kubectl rollout status deployment gradsystem > /dev/null

          echo "Deployment completed"
          echo "Checking running pods:"
          echo "Redis pods: $(kubectl get pods -l app=redis --no-headers | wc -l)"
          echo "Application pods: $(kubectl get pods -l app=gradsystem --no-headers | wc -l)"

    - name: Deployment Summary
      run: |
        echo "📝 Deployment Summary"
        echo "-------------------"
        echo "✅ Pipeline completed successfully"

    - name: Handle Failure
      if: failure()
      run: |
        echo "❌ Deployment encountered an issue"
