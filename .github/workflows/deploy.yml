name: Docker CI/CD
on:
  push:
    branches: 
      - "master" 
      - "development"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'master' && 'production' || 'development' }}
    steps:
    - name: Start Deployment
      run: |
        echo "Starting deployment process"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${GITHUB_SHA::7}" 

    - uses: actions/checkout@v4
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: chunchiehdev/gradsystem:${{ github.ref_name }}

    - name: Deploy to K3s
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set +x  
          export KUBECONFIG=~/.kube/config
          echo "Starting application deployment for ${{ github.ref_name }} "
          
          # Set variables based on branch
          if [ "${{ github.ref_name }}" = "master" ]; then
            DEPLOYMENT_FILE="prod/deployment.yaml"
            SECRET_NAME="gradsystem-secret"
            NAMESPACE="default"
            DEPLOYMENT_NAME="gradsystem"
          else
            DEPLOYMENT_FILE="dev/deployment-dev.yaml"
            SECRET_NAME="gradsystem-secret-dev"
            NAMESPACE="dev"
            DEPLOYMENT_NAME="gradsystem-dev"
          fi
          
          echo "Using deployment file: $DEPLOYMENT_FILE"
          echo "Target namespace: $NAMESPACE"
          echo "Secret name: $SECRET_NAME"
          
          cd ~/gradsystem
          if [ -f $DEPLOYMENT_FILE ]; then
            
            echo "Running database migrations ..."
            kubectl run migrate-$(date +%s) \
              --rm \
              --attach \
              --restart=Never \
              --namespace=$NAMESPACE \
              --image=chunchiehdev/gradsystem:${{ github.ref_name }} \
              --env="DATABASE_URL=$(kubectl get secret $SECRET_NAME -n $NAMESPACE -o jsonpath='{.data.DATABASE_URL}' | base64 -d)" \
              --env="NODE_ENV=${{ github.ref_name == 'master' && 'production' || 'development' }}" \
              -- npx prisma migrate deploy --schema=/app/prisma/schema.prisma

            if [ $? -eq 0 ]; then
              echo "Migration successful, deploying application..."
              kubectl apply -f $DEPLOYMENT_FILE
              
              echo "Triggering rollout restart to pull latest image..."
              kubectl rollout restart deployment $DEPLOYMENT_NAME -n $NAMESPACE
              kubectl rollout status deployment $DEPLOYMENT_NAME -n $NAMESPACE
              echo "Deployment completed successfully!"
            else
              echo "Migration failed!"
              exit 1
            fi
          else
            echo "Error: $DEPLOYMENT_FILE file not found"
            exit 1
          fi
          
    - name: Deployment Summary
      run: |
        echo "üìù Deployment Summary"
        echo "-------------------"
        echo "‚úÖ Pipeline completed successfully"
        echo "Environment: ${{ github.ref_name == 'master' && 'production' || 'development' }}"
        echo "Branch: ${{ github.ref }}"

    - name: Handle Failure
      if: failure()
      run: |
        echo "‚ùå Deployment encountered an issue"
